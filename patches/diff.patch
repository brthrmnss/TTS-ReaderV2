Index: rips/xb/9.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- www/screenshottest.html	(revision )
+++ www/screenshottest.html	(revision )
@@ -0,0 +1,87 @@
+<!DOCTYPE html>
+<html>
+<head>
+    <title></title>
+    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
+    <script type="text/javascript" src="js/html2canvas.js"></script>
+    <script type="text/javascript" src="js/jquery.plugin.html2canvas.js"></script>
+
+</head>
+<body>
+<div id="target" style="background-color: blue;">
+    <!-- Render your page inside of this div. -->
+    asdf<br />
+    <span>s
+    sdfsdf</span>
+    lOREN
+</div>
+
+<iframe width="0" height="0" border="0" name="dummyframe" id="dummyframe"></iframe>
+
+
+<input type="submit" value="Take Screenshot Of Div"
+       target="dummyframe"
+       onclick="capture();" />
+<form method="POST" onSubmit="captureForm()"
+      enctype="multipart/form-data"
+      action="http://127.0.0.1:6006/doUp2/"
+      id="myForm">
+    <input type="hidden" name="img_val" id="img_val" value="" />
+</form>
+
+<script>
+    function capture() {
+        $('#target').html2canvas({
+            onrendered: function (canvas) {
+                //Set hiddeen field's value to image data (base-64 string)
+                $('#img_val').val(canvas.toDataURL("image/png"));
+                //Submit the form manually
+               /* document.getElementById('myForm').onsubmit=function() {
+                    alert('hi');
+                    return false;
+                }*/
+                var d = document.getElementById("myForm").submit
+                $('#myForm').submit(function () {
+                   // sendContactForm();
+                    console.log('go')
+                    var formData = new FormData($(this)[0]);
+                    $.ajax({
+                        url: "http://127.0.0.1:6006/doUp2/",
+                        type: 'POST',
+                        data: formData,
+                        async: false,
+                        success: function (data) {
+                            alert(data)
+                        },
+                        cache: false,
+                        contentType: false,
+                        processData: false
+                    });
+
+
+                    return false;
+                });
+                $('#myForm').submit()
+
+                (function () {
+                    // sendContactForm();
+                    console.log('go')
+                    //return false;
+                });
+              //   debugger
+                return;
+                document.getElementById("myForm").submit(
+                        function (e) {
+                            e.f
+                            console.error(e)
+                            return false });
+
+                //document.body.appendChild(canvas);
+            }
+        });
+    }
+
+    setTimeout(capture, 2000)
+</script>
+</body>
+</html>
\ No newline at end of file
Index: www/screenshottestv2.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- www/screenshottestv2.html	(revision )
+++ www/screenshottestv2.html	(revision )
@@ -0,0 +1,31 @@
+<!DOCTYPE html>
+<html>
+<head>
+    <title></title>
+    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
+    <script type="text/javascript" src="js/html2canvas.js"></script>
+    <script type="text/javascript" src="js/jquery.plugin.html2canvas.js"></script>
+    <script type="text/javascript" src="js/screenCapture.js"></script>
+
+</head>
+<body>
+<div id="target" style="background-color: blue;">
+    <!-- Render your page inside of this div. -->
+    asdf<br />
+    <span>s
+    sdfsdf</span>
+    lOREN
+</div>
+
+
+
+<script>
+
+    var s = new ScreenCapture();
+    s.init()
+    setTimeout(function cap(){
+        s.capture('#target', {name:"testcapture"})
+    }, 2000)
+</script>
+</body>
+</html>
\ No newline at end of file
Index: www/js/html2canvas.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- www/js/screenCapture.js	(revision )
+++ www/js/screenCapture.js	(revision )
@@ -0,0 +1,82 @@
+/*
+ Capture screen of target div, and uploads
+ */
+
+function ScreenCapture() {
+    var self = this;
+    var p = this;
+
+    p.init = function init() {
+
+        var formToAdd = '<form method="POST" xonSubmit="captureForm()"'+
+            'enctype="multipart/form-data"'+
+            'action="http://127.0.0.1:6006/doUp2/"'+
+            'id="myForm">'+
+            '     <input type="hidden" name="img_val" id="img_val" value="" />'+
+            '     </form>'
+
+        var holder = $('<div></div>')
+        holder.attr("id", 'screenCaptureHolder')
+        $('#screenCaptureHolder').remove()
+        holder.append($(formToAdd))
+        $('body').append(holder)
+
+
+
+    }
+
+    p.capture =  function capture(target,data) {
+        var config = {}
+        if ( target.target ) {
+            config = target
+        }
+        if ( config.target == null ) config.target = '#target';
+        config.data = data;
+        $( config.target).html2canvas({
+            onrendered: function (canvas) {
+                //Set hiddeen field's value to image data (base-64 string)
+                $('#img_val').val(canvas.toDataURL("image/png"));
+                //Submit the form manually
+                /* document.getElementById('myForm').onsubmit=function() {
+                 alert('hi');
+                 return false;
+                 }*/
+                var d = document.getElementById("myForm").submit
+                $('#myForm').submit(function (event) {
+                    // sendContactForm();
+                    console.log('go')
+                    event.preventDefault();
+                    console.log('go')
+                    var formData = new FormData($(this)[0]);
+                    // formData.name = 'd3'
+                    $.each(data, function copyToFormData(k,v) {
+                        formData.append(k, v)
+                    })
+
+                    //debugger;
+                    $.ajax({
+                        url: "http://127.0.0.1:6006/doUp2/",
+                        type: 'POST',
+                        data: formData,
+                        async: true,
+                        success: function (data) {
+                            // alert(data)
+                            if ( config.fx ) config.fx(config)
+                        },
+                        cache: false,
+                        contentType: false,
+                        processData: false
+                    });
+
+
+                    return false;
+                });
+                $('#myForm').submit()
+                return;
+            }
+        });
+    }
+
+
+}
+
Index: www/js/jquery.plugin.html2canvas.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- www/js/r2.js	(revision )
+++ www/js/r2.js	(revision )
@@ -1066,6 +1066,8 @@
     }
     pH.playCurPage(play,playIndex)

+
+    // window.uploadCurrentPage()
     return;

 }
@@ -1077,13 +1079,101 @@
     console.log('run 5 pages')
 }

-
-
-window.uploadCurrentPage = function uploadCurrentPage() {
+window.uploadCurrentPage = function uploadCurrentPage(_fxPageComplete) {
     //console.clear();
     console.log('uploadCurrentPage')
+
+
+    var url = 'http://127.0.0.1:6006/upBook';
+    var data = {}
+    data.book_name = 'xb'
+    data.page = window.pH.currentPage;
+    data.contents = window.pH.cSH.sentences;
+
+
+    //if ( window.screenCaputerer ==null ) {
+        var s = new ScreenCapture();
+        s.init()
+        window.screenCaputerer = s;
+   // }
+    s = window.screenCaputerer;
+
+    function onstep2() {
+
+        // setTimeout(function cap(){
+        // s.capture('pdf-viewer',
+        s.capture(
+            {
+                target:'#container_pdf',
+                fx:  onDone_Step2
+            },
+            {name: data.page,
+                dir:data.book_name})
+        // }, 2000)
+
-}
+    }

+    function onDone_Step2 ( config ) {
+
+        var page = window.$scope.pdfCurrentPage
+        window.$scope.pdfViewerAPI.goToNextPage()
+
+        setTimeout(function goToNextPage(){
+            window.fx2();
+        }, 2000)
+
+
+        if ( _fxPageComplete ) {
+            setTimeout(function fxDone2(){
+                var config_ = config;
+                var currentPage = window.$scope.pdfCurrentPage
+
+                console.log('seeing',page, currentPage,  config_.data, config_)
+                if ( page == currentPage ) {
+                    console.error('over')
+                    return;
+                }
+                _fxPageComplete();
+            }, 4000)
+        }
+
+
+
+
+    }
+
+    onDone_Step1();
+    function onDone_Step1() {
+        $.ajax({
+            url: url,
+            type: 'post',
+            data: data,
+            success: onWavDataResponseRecieved,
+            headers: {
+                "Content-Type": "application/x-www-form-urlencoded"
+            }
+            //dataType: dataType
+        });
+
+        function onWavDataResponseRecieved() {
+            console.info('done')
+
+            onstep2()
+
+        }
+
+    }
+}
+
+
+
+window.uploadAllPages = function  uploadAllPages() {
+    window.uploadCurrentPage(goToNextPage_Loop)
+    function goToNextPage_Loop() {
+        //debugger;
+        window.uploadCurrentPage(goToNextPage_Loop)
+    }
+}



\ No newline at end of file
Index: www/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- www/index.html	(revision )
+++ www/index.html	(revision )
@@ -40,6 +40,8 @@
 			color: red;
 		}
 	</style>
+
+
 </head>
 <!-- NAVBAR
 ================================================== -->
@@ -94,6 +96,10 @@
 	});

 </script>
+
+<script type="text/javascript" src="js/html2canvas.js"></script>
+<script type="text/javascript" src="js/jquery.plugin.html2canvas.js"></script>
+<script type="text/javascript" src="js/screenCapture.js"></script>

 <script src="js/lib/js.cookie.js"></script>
 <script src="js/reloader.js"></script>
Index: PdfRipServer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- PdfRipServer.js	(revision )
+++ PdfRipServer.js	(revision )
@@ -14,12 +14,109 @@
         self.settings = config;
         config.port = sh.dv(config.port, 6006)

+        self.runServer();
+
     }

     self.runServer = function runServer() {

+        var express = require('express')
+        var app = express()
+
+        app.use(function addCrossDomainMiddlware(req, res, next) {
+            //asdf.g
+            res.header("Access-Control-Allow-Origin", "*");
+            if ( req.headers.origin != null ) {
+                res.header("Access-Control-Allow-Origin", req.headers.origin);
+            };
+            res.header("Access-Control-Allow-Headers", "X-Requested-With");
+            res.header("Access-Control-Allow-Headers", "Content-Type");
+            res.header("Access-Control-Allow-Credentials", "true");
+            res.header("Access-Control-Allow-Methods", "PUT, GET, POST, DELETE, OPTIONS");
+            next();
+        });
+
+        var bodyParser  = require("body-parser");
+        var multer = require('multer');
+
+        app.use(bodyParser.urlencoded({'extended':'true'}));            // parse application/x-www-form-urlencoded
+        app.use(bodyParser.json());                                     // parse application/json
+        app.use(bodyParser.json({ type: 'application/vnd.api+json' })); // parse application/vnd.api+json as json
+
+        /*app.use(express.bodyParser());
+         app.use(express.json());
+         app.use(express.urlencoded());
+         app.use(express.multipart());*/
+
+        app.get('/2', function (req, res) {
+            res.send('Hello World!');
+        });
+
+        app.post('/upBook', function uploadRip (req, res) {
+            var body = req.body;
+            var bookName = body.book_name;
+            var page = body.page
+            var file = page + '.txt'
+            console.log(req.body)
+            var contents = req.body.contents;
+            if ( sh.isArray(contents) ) {
+                contents = contents.join('\n')
-    }
+            }

+            var dirBook = __dirname+'/'+'rips/'+bookName;
+            sh.mkdirp(__dirname+'/'+'rips')
+            sh.mkdirp(dirBook)
+            sh.writeFile(dirBook+'/'+file,  contents)
+
+            res.send('Hello World!');
+        });
+
+
+
+
+        var storage =   multer.diskStorage({
+            destination: function (req, file, callback) {
+                console.error('what...', 66)
+                callback(null, __dirname + '/uploads');
+            },
+            filename: function (req, file, callback) {
+                callback(null, file.fieldname + '-' + Date.now());
+            }
+        });
+        var upload = multer({ storage : storage}).single('img_val');
+
+
+        app.post('/doUp2',function(req,res){
+            upload(req,res,function(err) {
+                console.error('what...', 5, req.headers)
+                if(err) {
+                    return res.end("Error uploading file.");
+                }
+                if ( req.body.img_val ) {
+                    var base64Data = req.body.img_val.replace(/^data:image\/png;base64,/, "");
+                    var base = 'x'
+                    if ( req.body.name != null ) {
+                        base = req.body.name;
+                    }
+                    var filename = base + '.png'
+                    var fileName = __dirname + '/' + 'uploads/' + filename
+                    require("fs").writeFileSync(fileName, base64Data, 'base64' );
+
+                    //sh.writeFile(fileName, req.body.img_val, true, true)
+                }
+                res.end("File is uploaded");
+            });
+        });
+
+
+
+        app.listen(self.settings.port, function () {
+            //console.log('Listening on ' + app.address().port)
+        });
+
+
+    }
+
     function defineUtils() {
         p.utils = {}
     }
@@ -39,7 +136,7 @@

     var t = new PdfRipServer()
     var options = {}
-    options.port = 7789
+    //options.port = 7789
     t.loadConfig(options);
     return;

